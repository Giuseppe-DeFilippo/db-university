1. Contare quanti iscritti ci sono stati ogni anno (4)
SELECT YEAR(enrolment_date) AS anno, COUNT(*) AS numero_iscritti
FROM db_university.students
GROUP BY YEAR (enrolment_date)
ORDER BY anno;

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio (29)
SELECT office_address, COUNT(*) AS numero_insegnanti
FROM db_university.teachers
GROUP BY office_address; 


3. Calcolare la media dei voti di ogni appello d'esame (1000)

SELECT * FROM db_university.exam_student;
SELECT exam_id, ROUND(AVG(vote), 2) AS media_voti  //round serve per arrotondare i numeri a 2 
FROM db_university.exam_student
GROUP BY exam_id

4. Contare quanti corsi di laurea ci sono per ogni dipartimento (12)

SELECT department_id, COUNT(*) AS number_of_courses
FROM degrees
GROUP BY department_id



1. Selezionare tutti gli studenti nati nel 1990 (160)

SELECT * FROM db_university.students
WHERE YEAR(date_of_birth) = 1990;


2. Selezionare tutti i corsi che valgono più di 10 crediti (479)
SELECT * FROM db_university.courses 
WHERE cfu>10

3. Selezionare tutti gli studenti che hanno più di 30 anni
SELECT * 
FROM students
WHERE date_of_birth < CURDATE() - INTERVAL 30 YEAR;  //curdate sarebbe la restituzione della data di oggi e interval sottrae 30 anni dalla data attuale

4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di
laurea (286)

SELECT * FROM db_university.courses
WHERE period = 'I semestre' AND year = 1;


5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del
20/06/2020 (21)
SELECT * FROM db_university.exams
WHERE date = '2020-06-20' AND hour >='14:00:00'



6. Selezionare tutti i corsi di laurea magistrale (38)

SELECT * FROM db_university.degrees
WHERE level = 'magistrale'

7. Da quanti dipartimenti è composta l'università? (12)

SELECT COUNT(id) AS total_departments FROM departments


8. Quanti sono gli insegnanti che non hanno un numero di telefono? (50)

SELECT * FROM db_university.teachers
WHERE phone IS NUll;


9. Inserire nella tabella degli studenti un nuovo record con i propri dati (per il campo
degree_id, inserire un valore casuale)

INSERT INTO students (degree_id, name, surname, date_of_birth, fiscal_code, enrolment_date, registration_number, email)
VALUES (20, 'Giuseppe', 'De Filippo', '2004-04-16', 'RSSMRA80A01H501Z', '2024-02-15', 558958, 'prova@gmail.com')


10. Cambiare il numero dell’ufficio del professor Pietro Rizzo in 126

UPDATE teachers
SET office_number = '126'
WHERE name= 'Pietro' AND surname = 'Rizzo'

11. Eliminare dalla tabella studenti il record creato precedentemente al punto 9

DELETE FROM students
WHERE name = 'Giuseppe' AND surname = 'De Filippo' AND fiscal_code = 'RSSMRA80A01H501Z';




Selezionare tutti i corsi del Corso di Laurea in Informatica (22)
2. Selezionare le informazioni sul corso con id = 144, con tutti i relativi appelli d’esame

SELECT `courses`.*,`exams`.* FROM `courses` 
INNER JOIN `exams` ON `courses`.`id` = `exams`.`course_id`
WHERE `courses`.`id` = 144; 

3. Selezionare a quale dipartimento appartiene il Corso di Laurea in Diritto
dell'Economia (Dipartimento di Scienze politiche, giuridiche e studi internazionali)

SELECT `departments`.*, `degrees`. `name` FROM `departments`
JOIN `degrees`
ON `degrees`. `department_id` = `departments`.`id` 
WHERE `degrees`. `name` = "Corso di Laurea in Diritto dell'Economia";

4. Selezionare tutti gli appelli d'esame del Corso di Laurea Magistrale in Fisica del
primo anno


5. Selezionare tutti i docenti che insegnano nel Corso di Laurea in Lettere (21)
SELECT `teachers`.* FROM `degrees` 
JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id`
JOIN `course_teacher` ON  `course_teacher`.`course_id`=`courses`.`id`  
JOIN `teachers` ON `course_teacher`.`teacher_id`=`teachers`.`id`
WHERE `degrees`.`name` = "Corso di Laurea in Lettere";


6. Selezionare il libretto universitario di Mirco Messina (matricola n. 620320)
SELECT `students` . `id`, `students` .`name`, `students`.`surname`,`courses`.`name`, `exam_student`.`vote` FROM `students`
INNER JOIN `exam_student` 
ON `exam_student`.`student_id`= `students`.`id`
JOIN `exams`
ON `exams`.`id`= `exam_student`.`exam_id`
JOIN `courses`
ON `courses`.`id` = `exams`.`course_id`
WHERE `students`.`registration_number` = 620320
AND `students`.`name` = "Mirco"
AND `students`.`surname` = "Messina"
AND `exam_student`.`vote` >= 18;



7. Selezionare il voto medio di superamento d'esame per ogni corso, con anche i dati
del corso di laurea associato, ordinati per media voto decrescente

SELECT `courses`.`name`, AVG(`exam_student`.`vote`) AS`media_voto`, `degrees`.`name`
FROM `exam_student`
JOIN `exams`
ON `exam_student`.`exam_id` = `exams`.`id`
JOIN `courses` ON `courses`.`id` = `exams`.`course_id`
JOIN `degrees` ON `degrees`.`id` = `courses`.`degree_id`
WHERE `exam_student`.`vote` >18
GROUP BY `courses`.`id`
ORDER BY `media_voto` DESC;





Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT `students`.`name`, `students`.`surname`,`degrees`.`name` AS `degree_name` FROM `students`
JOIN `degrees`
ON `students`.`degree_id` = `degrees`.`id`
WHERE `degrees`.`name` = "Corso di Laurea in Economia"

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze
SELECT `degrees`.`name` AS `degree_name`
FROM `degrees`
JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
WHERE `degrees`.`level` = "magistrale"
AND `departments`.`name` = "Dipartimento di Neuroscienze";


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
SELECT `courses`.`name` AS `course_name`
FROM `courses`
JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
JOIN `teachers` ON `teachers`.`id` = `course_teacher`.`teacher_id`
WHERE `teachers`.`id` = 44;


4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome
SELECT `students`.`name` AS `student_name`, `students`.`surname` AS `student_surname`,  `degrees`.`name` AS `degree_name`,  `departments`.`name` AS `department_name`
FROM `students`
JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id`
JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
ORDER BY `students`.`surname` ASC, `students`.`name` ASC;


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT  `degrees`.`name` AS `degree_name`,  `courses`.`name` AS `course_name`, `teachers`.`name` AS `teacher_name`,  `teachers`.`surname` AS `teacher_surname`
FROM `degrees`
JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id`
JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`
ORDER BY `degrees`.`name`, `courses`.`name`, `teachers`.`surname`, `teachers`.`name`;



6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)
SELECT DISTINCT `teachers`.`name`, `teachers`.`surname`
FROM `teachers`
JOIN `course_teacher` ON `teachers`.`id` = `course_teacher`.`teacher_id`
JOIN `courses` ON `course_teacher`.`course_id` = `courses`.`id`
JOIN `degrees` ON `courses`.`degree_id` = `degrees`.`id`
JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
WHERE `departments`.`name` = 'Dipartimento di Matematica';


7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18






